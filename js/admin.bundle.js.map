{"version":3,"file":"admin.bundle.js","mappings":"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","sources":["webpack://dashboat-tour/./js/admin.js"],"sourcesContent":["/* global Chart */\n/**\n * Painel Administrativo - Dash Boat Tour\n * Gerenciamento completo de reservas, contatos e estatísticas\n */\n\nclass AdminPanel {\n  constructor() {\n    this.authToken = localStorage.getItem('adminToken');\n    this.isAuthenticated = false;\n    this.currentTab = 'dashboard';\n    this.token = null;\n    this.charts = {}; // Para armazenar instâncias dos gráficos\n    this.listenersAttached = false; // GUARDA: Impede que os listeners sejam adicionados mais de uma vez\n    this.currentFilters = {};\n  }\n\n  addAuthHeaders(headers = {}) {\n    const token = this.authToken || localStorage.getItem('adminToken');\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n    headers['Content-Type'] = 'application/json';\n    return headers;\n  }\n\n  async login(username, password) {\n    try {\n      // CORREÇÃO: URL da API de login ajustada\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        this.authToken = data.token;\n        this.isAuthenticated = true;\n        localStorage.setItem('adminToken', data.token);\n        return { success: true, token: data.token };\n      } else {\n        return { success: false, message: data.message };\n      }\n    } catch (error) {\n      console.error('Erro no login:', error);\n      return { success: false, message: 'Erro de conexão' };\n    }\n  }\n\n  async logout() {\n    try {\n      if (this.authToken) {\n        await fetch('/api/auth/logout', {\n          method: 'POST',\n          headers: this.addAuthHeaders(),\n        });\n      }\n    } catch (error) {\n      console.error('Erro no logout:', error);\n    } finally {\n      // Limpar completamente o estado\n      this.authToken = null;\n      this.isAuthenticated = false;\n      localStorage.removeItem('adminToken');\n\n      // Limpar formulário de login\n      const usernameInput = document.getElementById('username');\n      const passwordInput = document.getElementById('password');\n      if (usernameInput) usernameInput.value = 'admin';\n      if (passwordInput) passwordInput.value = 'password';\n\n      // Limpar mensagens de erro\n      this.clearLoginMessages();\n\n      // Mostrar tela de login\n      this.showLoginScreen();\n\n      // Forçar reconfiguração do formulário\n      setTimeout(() => {\n        this.setupLoginForm();\n      }, 100);\n\n      // Recarregar a página para garantir estado limpo\n      window.location.reload();\n    }\n  }\n\n  async verifyToken() {\n    if (!this.authToken) return false;\n\n    try {\n      const response = await fetch('/api/auth/verify', {\n        headers: this.addAuthHeaders(),\n      });\n\n      const data = await response.json();\n      return data.success;\n    } catch (error) {\n      console.error('Erro ao verificar token:', error);\n      return false;\n    }\n  }\n\n  showLoginScreen() {\n    document.querySelector('.login-container').style.display = 'flex';\n    document.querySelector('.admin-panel').style.display = 'none';\n  }\n\n  showAdminPanel() {\n    document.querySelector('.login-container').style.display = 'none';\n    document.querySelector('.admin-panel').style.display = 'block';\n  }\n\n  async initAuth() {\n    try {\n      this.isAuthenticated = false;\n      this.authToken = null;\n\n      const savedToken = localStorage.getItem('adminToken');\n      if (savedToken) {\n        this.authToken = savedToken;\n        const isTokenValid = await this.verifyToken();\n\n        if (isTokenValid) {\n          this.isAuthenticated = true;\n          this.showAdminPanel();\n          this.init();\n          return;\n        } else {\n          localStorage.removeItem('adminToken');\n          this.authToken = null;\n        }\n      }\n\n      this.showLoginScreen();\n      this.setupLoginForm();\n    } catch (error) {\n      console.error('Erro na inicialização da autenticação:', error);\n      this.showLoginScreen();\n      this.setupLoginForm();\n    }\n  }\n\n  setupLoginForm() {\n    const loginForm = document.querySelector('.login-form');\n    if (!loginForm) return;\n\n    const usernameInput = document.getElementById('username');\n    const passwordInput = document.getElementById('password');\n    const loginBtn = loginForm.querySelector('.login-btn');\n\n    loginForm.addEventListener('submit', async e => {\n      e.preventDefault();\n\n      const username = usernameInput.value.trim();\n      const password = passwordInput.value;\n\n      if (!username || !password) {\n        this.showLoginError('Preencha todos os campos');\n        return;\n      }\n\n      loginBtn.disabled = true;\n      loginBtn.innerHTML = '<span class=\"spinner\"></span> Entrando...';\n\n      const result = await this.login(username, password);\n\n      if (result.success) {\n        this.isAuthenticated = true;\n        this.authToken = result.token;\n        localStorage.setItem('adminToken', result.token);\n        this.showAdminPanel();\n        this.init();\n      } else {\n        this.showLoginError(result.message || 'Erro no login');\n        loginBtn.disabled = false;\n        loginBtn.textContent = 'Entrar';\n      }\n    });\n  }\n\n  showLoginError(message) {\n    this.clearLoginMessages();\n    const errorDiv = document.createElement('div');\n    errorDiv.className = 'error-message';\n    errorDiv.textContent = message;\n    document.querySelector('.login-form').appendChild(errorDiv);\n  }\n\n  clearLoginMessages() {\n    document\n      .querySelectorAll('.error-message, .success-message')\n      .forEach(el => el.remove());\n  }\n\n  init() {\n    if (!this.isAuthenticated || !this.authToken) {\n      return;\n    }\n\n    this.setupTabs();\n    this.setupEventListeners();\n    this.loadDashboard();\n  }\n\n  setupTabs() {\n    const navLinks = document.querySelectorAll('[data-tab]');\n    navLinks.forEach(link => {\n      link.addEventListener('click', e => {\n        e.preventDefault();\n        const targetTab = link.getAttribute('data-tab');\n        this.showTab(targetTab);\n\n        navLinks.forEach(l => l.classList.remove('active'));\n        link.classList.add('active');\n      });\n    });\n  }\n\n  showTab(tabName) {\n    document.querySelectorAll('.tab-content').forEach(tab => {\n      tab.style.display = 'none';\n    });\n\n    const targetTab = document.getElementById(tabName);\n    if (targetTab) {\n      targetTab.style.display = 'block';\n      this.currentTab = tabName;\n\n      // Adicionado para garantir que o dashboard carregue ao clicar na aba\n      if (tabName === 'dashboard') {\n        this.loadDashboard();\n      }\n\n      setTimeout(() => {\n        switch (tabName) {\n          case 'reservations':\n            this.loadReservations();\n            break;\n          case 'contacts':\n            this.loadContacts();\n            break;\n          case 'stats':\n            this.loadStats();\n            break;\n        }\n      }, 100);\n    }\n  }\n\n  // CORREÇÃO: Listeners de eventos unificados para evitar duplicidade\n  setupEventListeners() {\n    if (this.listenersAttached) return;\n\n    // Listener de clique unificado para todas as ações\n    document.body.addEventListener('click', e => {\n      // Fechar modal ao clicar fora do conteúdo (na overlay)\n      const overlay = e.target.closest('.modal-overlay');\n      if (overlay && e.target === overlay) {\n        overlay.style.display = 'none';\n        overlay.classList.remove('active');\n        document.body.classList.remove('modal-open');\n        return;\n      }\n      // Se clicar no botão 'Ver', prioriza o botão\n      if (e.target.closest('.view-recent-contact-btn')) {\n        const activityItem = e.target.closest('.activity-item');\n        if (activityItem) {\n          const contactId = activityItem.dataset.contactId;\n          if (contactId) this.viewMessage(contactId);\n        }\n        return;\n      }\n      // Se clicar no card, mas não no botão\n      const card = e.target.closest('.activity-item');\n      if (card && !e.target.closest('button')) {\n        const contactId = card.dataset.contactId;\n        if (contactId) this.viewMessage(contactId);\n        return;\n      }\n      // Para outros botões e links\n      const target = e.target.closest('button, a');\n      if (!target) return;\n\n      // Ações de visualização\n      if (target.matches('.view-reservation-details')) {\n        this.viewReservationDetails(target.dataset.id);\n        return;\n      }\n      if (target.matches('.view-message')) {\n        this.viewMessage(target.dataset.id);\n        return;\n      }\n\n      // Ação de exclusão\n      if (target.matches('.delete-item')) {\n        this.deleteItem(target.dataset.id, target.dataset.type);\n        return;\n      }\n\n      // Logout\n      if (target.matches('.logout-btn')) {\n        e.preventDefault();\n        this.logout();\n        return;\n      }\n\n      // Fechar modal\n      if (target.matches('.modal-close')) {\n        const modal = target.closest('.modal-overlay');\n        if (modal) this.closeModal(modal.id);\n        return;\n      }\n\n      // Confirmar exclusão\n      if (target.matches('.btn-confirm')) {\n        const modal = target.closest('.modal-overlay');\n        if (modal) {\n          const { id, type } = modal.dataset;\n          if (id && type) this.performDelete(id, type);\n        }\n        return;\n      }\n    });\n\n    // Listener de mudança para dropdown de status\n    document.body.addEventListener('change', e => {\n      if (e.target.classList.contains('status-select')) {\n        const id = e.target.dataset.id;\n        const newStatus = e.target.value;\n        this.updateReservationStatus(id, newStatus);\n      }\n    });\n\n    this.listenersAttached = true;\n  }\n\n  async loadDashboard() {\n    if (!this.isAuthenticated || !this.authToken) return;\n\n    try {\n      const response = await fetch('/api/stats', {\n        headers: this.addAuthHeaders(),\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        this.updateDashboardStats(data.stats);\n        await this.loadRecentActivity();\n      }\n    } catch (error) {\n      console.error('Erro ao carregar dashboard:', error);\n    }\n  }\n\n  updateDashboardStats(stats) {\n    const elements = {\n      totalReservations: document.getElementById('totalReservations'),\n      pendingReservations: document.getElementById('pendingReservations'),\n      totalContacts: document.getElementById('totalContacts'),\n      monthlyRevenue: document.getElementById('monthlyRevenue'),\n    };\n\n    if (elements.totalReservations)\n      elements.totalReservations.textContent = stats.totalReservations || 0;\n    if (elements.pendingReservations)\n      elements.pendingReservations.textContent = stats.pendingReservations || 0;\n    if (elements.totalContacts)\n      elements.totalContacts.textContent = stats.totalContacts || 0;\n    if (elements.monthlyRevenue)\n      elements.monthlyRevenue.textContent = stats.confirmedReservations || 0;\n\n    // Função utilitária para aplicar cor e mensagem\n    function setTrendDashboard(elementSelector, value, thresholds, messages) {\n      const el = document.querySelector(elementSelector);\n      if (!el) return;\n      el.parentElement.classList.remove(\n        'trend-green',\n        'trend-yellow',\n        'trend-red'\n      );\n      let colorClass = 'trend-green';\n      let msg = '';\n      if (value >= thresholds.green) {\n        colorClass = 'trend-green';\n        msg = messages.green;\n      } else if (value >= thresholds.yellow) {\n        colorClass = 'trend-yellow';\n        msg = messages.yellow;\n      } else {\n        colorClass = 'trend-red';\n        msg = messages.red;\n      }\n      el.parentElement.classList.add(colorClass);\n      el.textContent = msg;\n    }\n\n    // Total de Reservas (novas no mês)\n    if (typeof stats.newReservationsLast30Days === 'number') {\n      setTrendDashboard(\n        '#totalReservations ~ .label + .trend span:last-child',\n        stats.newReservationsLast30Days,\n        { green: 10, yellow: 1 },\n        {\n          green: `Crescimento (+${stats.newReservationsLast30Days} este mês)`,\n          yellow: `Estável (+${stats.newReservationsLast30Days} este mês)`,\n          red: 'Sem novas reservas',\n        }\n      );\n    }\n\n    // Total de Contatos (novos no mês)\n    if (typeof stats.newContactsLast30Days === 'number') {\n      setTrendDashboard(\n        '#totalContacts ~ .label + .trend span:last-child',\n        stats.newContactsLast30Days,\n        { green: 10, yellow: 1 },\n        {\n          green: `Ótima procura (+${stats.newContactsLast30Days} este mês)`,\n          yellow: `Procura moderada (+${stats.newContactsLast30Days} este mês)`,\n          red: 'Sem novos contatos',\n        }\n      );\n    }\n\n    // Reservas Confirmadas (taxa de efetivação)\n    if (typeof stats.effectivenessRate === 'number') {\n      setTrendDashboard(\n        '#monthlyRevenue ~ .label + .trend span:last-child',\n        stats.effectivenessRate,\n        { green: 70, yellow: 40 },\n        {\n          green: 'Alta efetivação',\n          yellow: 'Pode melhorar',\n          red: 'Baixa efetivação',\n        }\n      );\n    }\n\n    // Reservas Pendentes: cor e mensagem dinâmica + clique para redirecionar\n    const pendingCard = elements.pendingReservations?.closest('.stats-card');\n    const pendingTrend = pendingCard?.querySelector('.trend span:last-child');\n    if (pendingCard && pendingTrend) {\n      // Remove classes antigas\n      pendingCard.classList.remove('trend-green', 'trend-yellow', 'trend-red');\n      let cor = 'trend-green';\n      let msg = 'Nenhuma pendência!';\n      const pendentes = stats.pendingReservations || 0;\n      if (pendentes === 0) {\n        cor = 'trend-green';\n        msg = 'Nenhuma pendência!';\n      } else if (pendentes < 5) {\n        cor = 'trend-yellow';\n        msg = 'Poucas pendências';\n      } else {\n        cor = 'trend-red';\n        msg = 'Atenção: muitas pendências!';\n      }\n      pendingCard.classList.add(cor);\n      pendingTrend.textContent = msg;\n      // Torna o card clicável\n      pendingCard.style.cursor = 'pointer';\n      pendingCard.onclick = () => {\n        document.querySelector('.nav-link[data-tab=\"reservations\"]').click();\n      };\n    }\n\n    // Taxa de Cancelamento\n    const cancellationIndicator = document.getElementById(\n      'cancellation-rate-indicator'\n    );\n    if (cancellationIndicator && stats.reservationStatusCount) {\n      const total = Object.values(stats.reservationStatusCount).reduce(\n        (a, b) => a + b,\n        0\n      );\n      const cancelled = stats.reservationStatusCount.cancelada || 0;\n      if (total > 0 && cancelled > 0) {\n        const percent = ((cancelled / total) * 100).toFixed(1);\n        cancellationIndicator.innerHTML = `\n          <div class=\"data-list-item\" style=\"display: flex; align-items: center; gap: 0.7rem;\">\n            <span style=\"font-weight: 800; font-size: 2.7rem; color: var(--danger-color); line-height: 1;\">${percent}%</span>\n            <span style=\"color: #64748b; font-size: 1.05rem; font-weight: 600;\">${cancelled} cancelamentos</span>\n          </div>\n        `;\n      } else {\n        cancellationIndicator.innerHTML = `<div class='empty-state'><i class='fas fa-ban' style='font-size: 1.2rem;'></i><p style='font-size: 0.98rem;'>Nenhum cancelamento registrado.</p></div>`;\n      }\n    }\n  }\n\n  async loadRecentActivity() {\n    try {\n      const reservationsResponse = await fetch('/api/reservations', {\n        headers: this.addAuthHeaders(),\n        cache: 'no-store',\n      });\n      const reservationsData = await reservationsResponse.json();\n\n      if (reservationsData.success) {\n        this.displayRecentReservations(\n          reservationsData.reservations.slice(0, 5)\n        );\n        setTimeout(() => {\n          document\n            .querySelectorAll('.reservation-activity-item')\n            .forEach(card => {\n              card.addEventListener('click', e => {\n                const id = card.getAttribute('data-reservation-id');\n                if (id) this.viewReservationDetails(id);\n              });\n            });\n        }, 100);\n      }\n\n      const contactsResponse = await fetch('/api/contacts', {\n        headers: this.addAuthHeaders(),\n        cache: 'no-store',\n      });\n      const contactsData = await contactsResponse.json();\n\n      if (contactsData.success) {\n        this.displayRecentContacts(contactsData.contacts.slice(0, 5));\n      }\n    } catch (error) {\n      console.error('Erro ao carregar atividade recente:', error);\n    }\n  }\n\n  displayRecentReservations(reservations) {\n    const container = document.getElementById('recentReservations');\n    if (!container) return;\n\n    if (!reservations || reservations.length === 0) {\n      container.innerHTML =\n        '<div class=\"empty-state\">Nenhuma reserva recente.</div>';\n      return;\n    }\n\n    container.innerHTML = reservations\n      .map(normalizeGuests)\n      .map(reservation => {\n        const guests = reservation.guests || 0;\n        const guestsLabel = `${guests} ${guests == 1 ? 'pessoa' : 'pessoas'}`;\n        return `\n      <div class=\"activity-item reservation-activity-item\" data-reservation-id=\"${reservation.id}\" style=\"display: flex; align-items: stretch;\">\n        <div class=\"activity-icon\"><i class=\"fas fa-ship\"></i></div>\n        <div class=\"activity-content\" style=\"flex:1; display: flex; flex-direction: column; justify-content: center;\">\n          <div class=\"reservation-row-top\" style=\"font-weight: 600; color: #1e293b; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;\">${this.escapeHtml(reservation.name)}</div>\n          <div class=\"reservation-row-bottom\" style=\"display: flex; align-items: center; gap: 0.5rem; font-size: 0.95em; margin-top: 2px;\">\n            <span class=\"text-muted\"><i class=\"fas fa-calendar-alt\"></i> ${reservation.date ? new Date(reservation.date).toLocaleDateString('pt-BR') : '-'}</span>\n            <span class=\"text-muted\"><i class=\"fas fa-map-marker-alt\"></i> ${this.escapeHtml(reservation.destination)}</span>\n            <span class=\"text-muted\"><i class=\"fas fa-user-friends\"></i> ${guestsLabel}</span>\n          </div>\n        </div>\n        <div class=\"reservation-status-col\" style=\"display: flex; align-items: center; justify-content: flex-end; min-width: 90px;\">\n          <span class=\"status-badge status-${reservation.status}\">${this.getStatusText(reservation.status)}</span>\n        </div>\n      </div>\n    `;\n      })\n      .join('');\n  }\n\n  displayRecentContacts(contacts) {\n    const container = document.getElementById('recentContacts');\n    if (!container) return;\n\n    if (!contacts || contacts.length === 0) {\n      container.innerHTML =\n        '<div class=\"empty-state\">Nenhum contato recente.</div>';\n      return;\n    }\n\n    container.innerHTML = contacts\n      .slice(0, 5)\n      .map(\n        contact => `\n      <div class=\"activity-item\" data-contact-id=\"${contact.id}\">\n        <div class=\"activity-icon\"><i class=\"fas fa-envelope\"></i></div>\n        <div class=\"activity-content\">\n          <strong>${this.escapeHtml(contact.name)}</strong>\n          <span>${this.escapeHtml(contact.email)}</span>\n        </div>\n        <div class=\"activity-actions\">\n          <button class=\"btn-modern btn-primary-modern btn-sm view-recent-contact-btn\">Ver</button>\n        </div>\n      </div>\n    `\n      )\n      .join('');\n  }\n\n  async loadReservations(filters) {\n    if (!this.isAuthenticated || !this.authToken) return;\n    // Se não passar filtros, usa os atuais\n    if (!filters) filters = this.currentFilters || {};\n    // Salva os filtros atuais\n    this.currentFilters = { ...filters };\n    try {\n      let url = '/api/reservations';\n      const params = [];\n      if (filters.status)\n        params.push(`status=${encodeURIComponent(filters.status)}`);\n      if (filters.destination)\n        params.push(`destination=${encodeURIComponent(filters.destination)}`);\n      if (params.length) url += '?' + params.join('&');\n      const response = await fetch(url, {\n        headers: this.addAuthHeaders(),\n        cache: 'no-store',\n      });\n      const data = await response.json();\n      if (data.success) {\n        this.showLoading('reservationsList');\n        this.displayReservations(data.reservations);\n      } else {\n        this.showError('Erro ao carregar reservas');\n      }\n    } catch (error) {\n      console.error('Erro ao carregar reservas:', error);\n      this.showError('Erro ao carregar reservas');\n    }\n  }\n\n  showLoading(elementId) {\n    const element = document.getElementById(elementId);\n    if (element) {\n      element.innerHTML = `\n            <div class=\"loading\">\n                <div class=\"spinner\"></div>\n                <span>Carregando...</span>\n            </div>\n        `;\n    }\n  }\n\n  displayReservations(reservations) {\n    const reservationsList = document.getElementById('reservationsList');\n    if (!reservationsList) {\n      console.error('Elemento #reservationsList não encontrado.');\n      return;\n    }\n\n    // Montar tabela com cabeçalho sempre visível\n    let tableHTML = `\n      <div class=\"table-responsive\">\n        <table class=\"table-modern\" id=\"reservations-table\">\n          <thead>\n            <tr>\n              <th>Nome</th>\n              <th>Destino</th>\n              <th>Data</th>\n              <th>Pessoas</th>\n              <th>Status</th>\n              <th class=\"text-right\" style=\"position: relative; white-space: nowrap;\">\n                Ações\n                <button id=\"filterDropdownBtn\" type=\"button\" style=\"background: none; border: none; box-shadow: none; padding: 0; margin: 0; cursor: pointer;\">\n                  <i class=\"fas fa-sliders-h\" style=\"font-size: 1.2em;\"></i>\n                </button>\n                <div id=\"filterDropdown\" class=\"dropdown-menu\" style=\"display: none; padding: 18px 12px 12px 12px; position: absolute; right: 0; left: auto; top: 100%; z-index: 1000;\">\n                  <form id=\"filterForm\" autocomplete=\"off\">\n                    <div class=\"form-group\">\n                      <label for=\"filterStatus\">Status</label>\n                      <select id=\"filterStatus\" class=\"form-control\">\n                        <option value=\"\">Todos</option>\n                        <option value=\"pendente\">Pendente</option>\n                        <option value=\"confirmada\">Confirmada</option>\n                        <option value=\"cancelada\">Cancelada</option>\n                      </select>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"filterDestination\">Destino</label>\n                      <select id=\"filterDestination\" class=\"form-control\">\n                        <option value=\"\">Todos</option>\n                        <option value=\"Cabo Frio\">Cabo Frio</option>\n                        <option value=\"Arraial do Cabo\">Arraial do Cabo</option>\n                        <option value=\"Armação de Búzios\">Armação de Búzios</option>\n                      </select>\n                    </div>\n                    <div class=\"d-flex justify-content-between mt-3\">\n                      <button type=\"submit\" class=\"btn-modern btn-primary-modern\">Aplicar</button>\n                      <button type=\"button\" id=\"clearFiltersBtn\" class=\"btn-modern btn-secondary-modern\">Limpar</button>\n                    </div>\n                  </form>\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n    `;\n    if (!reservations || reservations.length === 0) {\n      tableHTML += `<tr><td colspan=\"6\" class=\"text-center\">Nenhuma reserva encontrada.</td></tr>`;\n    } else {\n      tableHTML += reservations\n        .map(normalizeGuests)\n        .map(\n          reservation => `\n          <tr data-id=\"${reservation.id}\">\n              <td>${this.escapeHtml(reservation.name)}</td>\n              <td>${this.escapeHtml(reservation.destination)}</td>\n              <td>${new Date(reservation.date).toLocaleDateString()}</td>\n              <td>${reservation.guests}</td>\n              <td>\n                  ${this.createStatusDropdown(reservation.id, reservation.status)}\n              </td>\n              <td class=\"text-right\">\n                  <button class=\"btn-modern btn-primary-modern btn-sm view-reservation-details\" data-id=\"${reservation.id}\">\n                      <i class=\"fas fa-eye\"></i> Detalhes\n                  </button>\n                  <button class=\"btn-modern btn-danger-modern btn-sm delete-item\" data-id=\"${reservation.id}\" data-type=\"reservation\">\n                      <i class=\"fas fa-trash\"></i> Excluir\n                  </button>\n              </td>\n          </tr>\n      `\n        )\n        .join('');\n    }\n    tableHTML += `</tbody></table></div>`;\n    reservationsList.innerHTML = tableHTML;\n\n    // Reatribuir eventos do filtro\n    const filterBtn = document.getElementById('filterDropdownBtn');\n    const filterDropdown = document.getElementById('filterDropdown');\n    const filterForm = document.getElementById('filterForm');\n    const clearFiltersBtn = document.getElementById('clearFiltersBtn');\n    const filterStatus = document.getElementById('filterStatus');\n    const filterDestination = document.getElementById('filterDestination');\n\n    // Setar valores dos selects conforme filtros atuais\n    if (filterStatus && this.currentFilters && this.currentFilters.status) {\n      filterStatus.value = this.currentFilters.status;\n    }\n    if (\n      filterDestination &&\n      this.currentFilters &&\n      this.currentFilters.destination\n    ) {\n      filterDestination.value = this.currentFilters.destination;\n    }\n\n    if (filterBtn && filterDropdown) {\n      filterBtn.addEventListener('click', function (e) {\n        e.stopPropagation();\n        filterDropdown.style.display =\n          filterDropdown.style.display === 'block' ? 'none' : 'block';\n      });\n      document.addEventListener('click', function handler(e) {\n        if (!filterDropdown.contains(e.target) && e.target !== filterBtn) {\n          filterDropdown.style.display = 'none';\n          document.removeEventListener('click', handler);\n        }\n      });\n    }\n    if (filterForm) {\n      filterForm.addEventListener('submit', e => {\n        e.preventDefault();\n        filterDropdown.style.display = 'none';\n        const status = filterStatus.value;\n        const destination = filterDestination.value;\n        window.adminPanel.loadReservations({ status, destination });\n      });\n    }\n    if (clearFiltersBtn) {\n      clearFiltersBtn.addEventListener('click', function () {\n        filterStatus.value = '';\n        filterDestination.value = '';\n        filterDropdown.style.display = 'none';\n        window.adminPanel.currentFilters = {};\n        window.adminPanel.loadReservations({});\n      });\n    }\n  }\n\n  createStatusDropdown(id, currentStatus) {\n    const statuses = {\n      pendente: 'Pendente',\n      confirmada: 'Confirmada',\n      cancelada: 'Cancelada',\n    };\n    const normalizedCurrentStatus = (currentStatus || '').toLowerCase();\n    const options = Object.entries(statuses)\n      .map(([value, text]) => {\n        const selected = value === normalizedCurrentStatus ? 'selected' : '';\n        return `<option value=\"${value}\" ${selected}>${text}</option>`;\n      })\n      .join('');\n    return `\n        <select class=\"status-select\" data-id=\"${id}\" data-status=\"${normalizedCurrentStatus}\">\n            ${options}\n        </select>\n    `;\n  }\n\n  createStatusButtons(currentStatus) {\n    const statuses = ['Pendente', 'Confirmada', 'Cancelada'];\n    let buttonsHtml = '';\n\n    buttonsHtml += `<span class=\"badge badge-info\">${this.escapeHtml(currentStatus)}</span>`;\n\n    statuses.forEach(status => {\n      if (status.toLowerCase() !== currentStatus.toLowerCase()) {\n        buttonsHtml += `<button class=\"btn btn-sm btn-outline-secondary change-status-btn ml-1\" data-status=\"${status}\">${status}</button>`;\n      }\n    });\n\n    return buttonsHtml;\n  }\n\n  async updateReservationStatus(id, status) {\n    try {\n      // CORREÇÃO: URL da API de atualização de status ajustada\n      const response = await fetch(`/api/reservations/${id}/status`, {\n        method: 'PUT',\n        headers: this.addAuthHeaders({ 'Content-Type': 'application/json' }),\n        body: JSON.stringify({ status: status }),\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        this.showSuccess(`Status atualizado para ${status}.`);\n        setTimeout(async () => {\n          await this.loadReservations();\n          await this.loadDashboard();\n        }, 200);\n      } else {\n        this.showError(data.message || 'Falha ao atualizar status.');\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar status da reserva:', error);\n      this.showError('Erro de rede ao atualizar status.');\n    }\n  }\n\n  async loadContacts() {\n    this.showLoading('contactsList');\n    try {\n      const response = await fetch('/api/contacts', {\n        headers: this.addAuthHeaders(),\n      });\n      if (!response.ok) {\n        throw new Error(`Erro na rede: ${response.statusText}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        this.displayContacts(data.contacts);\n      } else {\n        throw new Error(data.message || 'Falha ao obter dados de contatos');\n      }\n    } catch (error) {\n      console.error('Erro ao carregar contatos:', error);\n      this.showError('Não foi possível carregar os contatos.');\n      const contactsList = document.getElementById('contactsList');\n      if (contactsList) {\n        contactsList.innerHTML =\n          '<div class=\"alert alert-danger\">Erro ao carregar contatos.</div>';\n      }\n    }\n  }\n\n  displayContacts(contacts) {\n    const contactsList = document.getElementById('contactsList');\n    if (!contactsList) {\n      console.error('Elemento #contactsList não encontrado.');\n      return;\n    }\n\n    if (!contacts || contacts.length === 0) {\n      contactsList.innerHTML =\n        '<div class=\"alert alert-info\">Nenhum contato encontrado.</div>';\n      return;\n    }\n\n    const tableHTML = `\n    <div class=\"table-responsive\">\n      <table class=\"table-modern\" id=\"contacts-table\">\n          <thead>\n              <tr>\n                  <th>Nome</th>\n                  <th>Email</th>\n                  <th>Telefone</th>\n                  <th>Data</th>\n                  <th class=\"text-right\">Ações</th>\n              </tr>\n          </thead>\n          <tbody>\n              ${contacts\n                .map(\n                  contact => `\n                  <tr data-id=\"${contact.id}\">\n                      <td>${this.escapeHtml(contact.name)}</td>\n                      <td>${this.escapeHtml(contact.email)}</td>\n                      <td>${this.escapeHtml(contact.phone || 'N/A')}</td>\n                      <td>${new Date(\n                        contact.createdAt || contact.timestamp\n                      ).toLocaleDateString()}</td>\n                      <td class=\"text-right\">\n                          <button class=\"btn-modern btn-primary-modern btn-sm view-message\" data-id=\"${\n                            contact.id\n                          }\">\n                              <i class=\"fas fa-eye\"></i> Visualizar\n                          </button>\n                          <button class=\"btn-modern btn-danger-modern btn-sm delete-item\" data-id=\"${\n                            contact.id\n                          }\" data-type=\"contact\">\n                              <i class=\"fas fa-trash\"></i> Excluir\n                          </button>\n                      </td>\n                  </tr>\n              `\n                )\n                .join('')}\n          </tbody>\n      </table>\n    </div>\n    `;\n\n    contactsList.innerHTML = tableHTML;\n  }\n\n  async loadStats() {\n    if (!this.isAuthenticated || !this.authToken) return;\n\n    try {\n      const response = await fetch('/api/stats', {\n        headers: this.addAuthHeaders(),\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        console.log('DEBUG displayStats stats:', data.stats);\n        this.displayStats(data.stats);\n      } else {\n        this.showError('Erro ao carregar estatísticas');\n      }\n    } catch (error) {\n      console.error('Erro ao carregar estatísticas:', error);\n      this.showError('Erro ao carregar estatísticas');\n    }\n  }\n\n  displayStats(stats) {\n    if (!stats) return;\n\n    // Preenche os KPIs\n    document.getElementById('stats-total-reservations').textContent =\n      stats.totalReservations || 0;\n    document.getElementById('stats-total-contacts').textContent =\n      stats.totalContacts || 0;\n    document.getElementById('stats-effectiveness-rate').textContent =\n      `${stats.effectivenessRate || 0}%`;\n    document.getElementById('stats-conversion-rate').textContent =\n      `${stats.conversionRate || 0}%`;\n\n    // Função utilitária para aplicar cor e mensagem\n    function setTrend(elementId, value, thresholds, messages) {\n      const el = document.getElementById(elementId);\n      if (!el) return;\n      // Remove classes antigas\n      el.parentElement.classList.remove(\n        'trend-green',\n        'trend-yellow',\n        'trend-red'\n      );\n      let colorClass = 'trend-green';\n      let msg = '';\n      if (value >= thresholds.green) {\n        colorClass = 'trend-green';\n        msg = messages.green;\n      } else if (value >= thresholds.yellow) {\n        colorClass = 'trend-yellow';\n        msg = messages.yellow;\n      } else {\n        colorClass = 'trend-red';\n        msg = messages.red;\n      }\n      el.parentElement.classList.add(colorClass);\n      el.textContent = msg;\n    }\n\n    // Total de Reservas (novas no mês)\n    if (typeof stats.newReservationsLast30Days === 'number') {\n      setTrend(\n        'stats-trend-reservations',\n        stats.newReservationsLast30Days,\n        { green: 10, yellow: 1 },\n        {\n          green: `Crescimento (+${stats.newReservationsLast30Days} este mês)`,\n          yellow: `Estável (+${stats.newReservationsLast30Days} este mês)`,\n          red: 'Sem novas reservas',\n        }\n      );\n    }\n\n    // Total de Contatos (novos no mês)\n    if (typeof stats.newContactsLast30Days === 'number') {\n      setTrend(\n        'stats-trend-contacts',\n        stats.newContactsLast30Days,\n        { green: 10, yellow: 1 },\n        {\n          green: `Ótima procura (+${stats.newContactsLast30Days} este mês)`,\n          yellow: `Procura moderada (+${stats.newContactsLast30Days} este mês)`,\n          red: 'Sem novos contatos',\n        }\n      );\n    }\n\n    // Taxa de Efetivação (%)\n    if (typeof stats.effectivenessRate === 'number') {\n      setTrend(\n        'stats-trend-effectiveness',\n        stats.effectivenessRate,\n        { green: 70, yellow: 40 },\n        {\n          green: 'Alta efetivação',\n          yellow: 'Pode melhorar',\n          red: 'Baixa efetivação',\n        }\n      );\n    }\n\n    // Taxa de Conversão (%)\n    if (typeof stats.conversionRate === 'number') {\n      setTrend(\n        'stats-trend-conversion',\n        stats.conversionRate,\n        { green: 30, yellow: 10 },\n        {\n          green: 'Ótima conversão',\n          yellow: 'Conversão razoável',\n          red: 'Conversão baixa',\n        }\n      );\n    }\n\n    // Gráfico de Destino (Barras Verticais)\n    const destinationCtx = document.getElementById('destination-chart');\n    if (destinationCtx && stats.destinationDistribution) {\n      if (this.charts.destination) this.charts.destination.destroy();\n      this.charts.destination = new Chart(destinationCtx, {\n        type: 'bar',\n        data: {\n          labels: Object.keys(stats.destinationDistribution),\n          datasets: [\n            {\n              label: 'Reservas',\n              data: Object.values(stats.destinationDistribution),\n              backgroundColor: 'rgba(59, 130, 246, 0.7)',\n              borderRadius: 8,\n              maxBarThickness: 32,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: { legend: { display: false }, tooltip: { enabled: true } },\n          scales: {\n            x: {\n              grid: { display: false },\n              ticks: { color: '#64748b', font: { size: 13 } },\n            },\n            y: {\n              beginAtZero: true,\n              grid: { color: '#f1f5f9' },\n              ticks: { color: '#64748b', font: { size: 13 } },\n            },\n          },\n        },\n      });\n    }\n\n    // Lista de Destinos\n    const destinationList = document.getElementById('destination-list');\n    if (destinationList && stats.destinationDistribution) {\n      const destinations = Object.entries(stats.destinationDistribution).sort(\n        ([, a], [, b]) => b - a\n      );\n      destinationList.innerHTML =\n        destinations.length > 0\n          ? destinations\n              .map(\n                ([name, count]) => `\n            <div class=\"data-list-item\">\n                <span class=\"label\">${this.escapeHtml(name)}</span>\n                <span class=\"value\">${count}</span>\n            </div>\n        `\n              )\n              .join('')\n          : '<p class=\"text-muted text-center\">Nenhum dado de destino.</p>';\n    }\n\n    // Gráfico de linha: Evolução Mensal de Reservas\n    const monthlyChart = document.getElementById('monthly-chart');\n    if (\n      monthlyChart &&\n      stats.monthlyDistribution &&\n      stats.monthlyDistribution.reservations\n    ) {\n      if (this.charts && this.charts.monthlyLine)\n        this.charts.monthlyLine.destroy();\n      this.charts = this.charts || {};\n      const monthNames = [\n        'Jan',\n        'Fev',\n        'Mar',\n        'Abr',\n        'Mai',\n        'Jun',\n        'Jul',\n        'Ago',\n        'Set',\n        'Out',\n        'Nov',\n        'Dez',\n      ];\n      this.charts.monthlyLine = new Chart(monthlyChart.getContext('2d'), {\n        type: 'line',\n        data: {\n          labels: monthNames,\n          datasets: [\n            {\n              label: 'Reservas',\n              data: stats.monthlyDistribution.reservations,\n              borderColor: '#2563eb',\n              backgroundColor: 'rgba(37, 99, 235, 0.13)',\n              fill: true,\n              tension: 0.4,\n              pointRadius: 4,\n              pointBackgroundColor: '#2563eb',\n              pointBorderColor: '#fff',\n              pointHoverRadius: 6,\n            },\n          ],\n        },\n        options: {\n          plugins: { legend: { display: false } },\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              grid: { display: false },\n              ticks: { color: '#64748b', font: { size: 13 } },\n            },\n            y: {\n              beginAtZero: true,\n              grid: { color: '#f1f5f9' },\n              ticks: { color: '#64748b', font: { size: 13 } },\n            },\n          },\n        },\n      });\n    }\n\n    // Lista Mensal\n    const monthlyList = document.getElementById('monthly-list');\n    if (\n      monthlyList &&\n      stats.monthlyDistribution &&\n      stats.monthlyDistribution.reservations\n    ) {\n      const monthNames = [\n        'Janeiro',\n        'Fevereiro',\n        'Março',\n        'Abril',\n        'Maio',\n        'Junho',\n        'Julho',\n        'Agosto',\n        'Setembro',\n        'Outubro',\n        'Novembro',\n        'Dezembro',\n      ];\n      const monthlyData = stats.monthlyDistribution.reservations\n        .map((count, index) => ({ name: monthNames[index], count }))\n        .filter(item => item.count > 0);\n\n      monthlyList.innerHTML =\n        monthlyData.length > 0\n          ? monthlyData\n              .map(\n                ({ name, count }) => `\n            <div class=\"data-list-item\">\n                <span class=\"label\">${name}</span>\n                <span class=\"value\">${count}</span>\n            </div>\n        `\n              )\n              .join('')\n          : '<p class=\"text-muted text-center\">Nenhuma reserva este ano.</p>';\n    }\n\n    // Gráfico de pizza: Reservas por mês\n    const monthlyPie = document.getElementById('monthly-pie-chart');\n    if (\n      monthlyPie &&\n      stats.monthlyDistribution &&\n      stats.monthlyDistribution.reservations\n    ) {\n      if (this.charts && this.charts.monthlyPie)\n        this.charts.monthlyPie.destroy();\n      this.charts = this.charts || {};\n      const monthNames = [\n        'Jan',\n        'Fev',\n        'Mar',\n        'Abr',\n        'Mai',\n        'Jun',\n        'Jul',\n        'Ago',\n        'Set',\n        'Out',\n        'Nov',\n        'Dez',\n      ];\n      this.charts.monthlyPie = new Chart(monthlyPie.getContext('2d'), {\n        type: 'pie',\n        data: {\n          labels: monthNames,\n          datasets: [\n            {\n              data: stats.monthlyDistribution.reservations,\n              backgroundColor: [\n                '#2563eb',\n                '#1d4ed8',\n                '#3b82f6',\n                '#60a5fa',\n                '#93c5fd',\n                '#38bdf8',\n                '#0ea5e9',\n                '#0284c7',\n                '#0369a1',\n                '#0e7490',\n                '#14b8a6',\n                '#22d3ee',\n              ],\n            },\n          ],\n        },\n        options: {\n          plugins: { legend: { display: true, position: 'bottom' } },\n        },\n      });\n    }\n    // Gráfico de pizza: Reservas por destino (3 cores principais)\n    const destinationPie = document.getElementById('destination-pie-chart');\n    if (destinationPie && stats.destinationDistribution) {\n      if (this.charts && this.charts.destinationPie)\n        this.charts.destinationPie.destroy();\n      this.charts = this.charts || {};\n      const labels = Object.keys(stats.destinationDistribution);\n      const data = Object.values(stats.destinationDistribution);\n      const pieColors = ['#2563eb', '#10b981', '#f59e0b'];\n      const backgroundColor = labels.map((_, i) => pieColors[i % 3]);\n      this.charts.destinationPie = new Chart(destinationPie.getContext('2d'), {\n        type: 'pie',\n        data: {\n          labels,\n          datasets: [\n            {\n              data,\n              backgroundColor,\n            },\n          ],\n        },\n        options: {\n          plugins: { legend: { display: true, position: 'bottom' } },\n        },\n      });\n    }\n    // Sazonalidade: Mês com mais reservas (corrigido)\n    const seasonalityIndicator = document.getElementById(\n      'seasonality-indicator'\n    );\n    if (\n      seasonalityIndicator &&\n      stats.monthlyDistribution &&\n      stats.monthlyDistribution.reservations\n    ) {\n      const monthNamesFull = [\n        'Janeiro',\n        'Fevereiro',\n        'Março',\n        'Abril',\n        'Maio',\n        'Junho',\n        'Julho',\n        'Agosto',\n        'Setembro',\n        'Outubro',\n        'Novembro',\n        'Dezembro',\n      ];\n      const reservations = stats.monthlyDistribution.reservations;\n      let max = 0;\n      let maxIndex = -1;\n      let total = 0;\n      reservations.forEach((count, idx) => {\n        total += count;\n        if (count > max) {\n          max = count;\n          maxIndex = idx;\n        }\n      });\n      // Tendência visual\n      let trendHtml = '';\n      if (maxIndex > 0) {\n        const prev = reservations[maxIndex - 1];\n        if (typeof prev === 'number') {\n          const diff = max - prev;\n          if (diff > 0) {\n            trendHtml = `<span style='color: var(--success-color); font-weight:600; margin-left:0.5rem;'><i class='fas fa-arrow-up'></i> +${diff} vs ${monthNamesFull[maxIndex - 1]}</span>`;\n          } else if (diff < 0) {\n            trendHtml = `<span style='color: var(--danger-color); font-weight:600; margin-left:0.5rem;'><i class='fas fa-arrow-down'></i> ${diff} vs ${monthNamesFull[maxIndex - 1]}</span>`;\n          }\n        }\n      }\n      // Recorde histórico\n      let isRecorde = false;\n      if (stats.allYearsMonthlyDistribution) {\n        let record = 0;\n        for (const year in stats.allYearsMonthlyDistribution) {\n          const arr = stats.allYearsMonthlyDistribution[year];\n          arr.forEach(val => {\n            if (val > record) record = val;\n          });\n        }\n        if (max >= record && record > 0) {\n          isRecorde = true;\n        }\n      }\n      if (max > 0 && maxIndex >= 0) {\n        const percent = total > 0 ? ((max / total) * 100).toFixed(1) : 0;\n        seasonalityIndicator.innerHTML = `\n          <style>\n            @keyframes recordFadeIn {\n              0% { opacity: 0; transform: scale(0.95); }\n              100% { opacity: 1; transform: scale(1); }\n            }\n          </style>\n          <div class=\"seasonality-highlight\" style=\"display: flex; flex-direction: column; align-items: flex-start; justify-content: center; padding: 0.7rem 0 0.6rem 0; width: 100%;\">\n            <div style=\"display: flex; align-items: center; width: 100%; justify-content: space-between;\">\n              <div class=\"month-name\" style=\"font-size: 1.13rem; font-weight: 700; color: var(--dark-color);\">${monthNamesFull[maxIndex]}</div>\n            </div>\n            <div class=\"month-reservations\" style=\"font-size: 0.98rem; color: #64748b; margin-top: 0.32rem; width: 100%; display: flex; align-items: center; gap: 0.6rem;\">\n              <span>${max} reservas${percent > 0 ? ` <span style='color: var(--success-color); font-weight: 600;'>(${percent}% do total)</span>` : ''}</span>\n              ${trendHtml}\n            </div>\n            ${isRecorde ? `<div style='color: var(--primary-color); font-weight: 600; margin-top:0.38rem; width: 100%; animation: recordFadeIn 0.7s cubic-bezier(.4,1.4,.6,1) 1;'>Recorde histórico!</div>` : ''}\n            <div style='margin-top: 0.5rem; color: #b0b8c9; font-size: 0.85rem; width: 100%;'>O percentual indica a proporção de reservas deste mês em relação ao total do ano.</div>\n          </div>\n        `;\n        // Remove qualquer clique do card\n        const card = seasonalityIndicator.closest('.content-card');\n        if (card) {\n          card.style.cursor = '';\n          card.onclick = null;\n        }\n      } else {\n        seasonalityIndicator.innerHTML = `<div class='empty-state'><i class='fas fa-calendar-times'></i><p>Nenhuma reserva este ano.</p></div>`;\n      }\n    }\n    // Top 3 Destinos\n    const topDestinationsIndicator = document.getElementById(\n      'top-destinations-indicator'\n    );\n    if (topDestinationsIndicator && stats.destinationDistribution) {\n      const destinations = Object.entries(stats.destinationDistribution)\n        .sort((a, b) => b[1] - a[1])\n        .slice(0, 3);\n      if (destinations.length > 0) {\n        topDestinationsIndicator.innerHTML = destinations\n          .map(\n            ([dest, count], idx) => `\n          <div class=\"data-list-item\" style=\"display: flex; align-items: center; gap: 1rem;\">\n            <span style=\"font-size: 1.5rem; color: var(--primary-color);\"><i class=\"fas fa-medal\"></i> #${idx + 1}</span>\n            <div>\n              <div style=\"font-weight: 700; font-size: 1.05rem;\">${dest}</div>\n              <div style=\"color: #64748b; font-size: 0.95rem;\">${count} reservas</div>\n            </div>\n          </div>\n        `\n          )\n          .join('');\n      } else {\n        topDestinationsIndicator.innerHTML = `<div class='empty-state'><i class='fas fa-map-marked-alt'></i><p>Nenhum destino registrado.</p></div>`;\n      }\n    }\n    // DEBUG: Teste de preenchimento do card Clientes Fiéis\n    const loyalCustomersIndicator = document.getElementById(\n      'loyal-customers-ranking'\n    );\n    if (loyalCustomersIndicator) {\n      loyalCustomersIndicator.innerHTML =\n        \"<div style='color: red; font-weight: bold;'>DEBUG: O JS está rodando!</div>\";\n    }\n    // Ranking de Clientes Fiéis (Top 3, mesmo que todos tenham só uma reserva)\n    if (loyalCustomersIndicator && stats.loyalCustomers) {\n      // Log para debug\n      console.log('DEBUG loyalCustomers:', stats.loyalCustomers);\n      const customers = stats.loyalCustomers;\n      if (customers.length > 0) {\n        loyalCustomersIndicator.innerHTML = `\n          <table class=\"table table-borderless mb-0 loyal-ranking-table\" style=\"font-size: 0.98rem;\">\n            <thead>\n              <tr>\n                <th style=\"text-align:left;\">Cliente</th>\n                <th style=\"text-align:center;\">Reservas</th>\n                <th style=\"text-align:center; min-width:7em; max-width:12em; white-space:nowrap;\">\n                  Última Reserva\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              ${customers\n                .sort(\n                  (a, b) =>\n                    b.count - a.count ||\n                    (b.lastDate ? new Date(b.lastDate) : 0) -\n                      (a.lastDate ? new Date(a.lastDate) : 0)\n                )\n                .slice(0, 3)\n                .map(\n                  (c, i) => `\n                <tr>\n                  <td style=\"display:flex; align-items:center; gap:0.5em;\">\n                    ${\n                      i === 0\n                        ? '<span class=\"ranking-badge ranking-gold\"><i class=\"fas fa-trophy\"></i></span>'\n                        : i === 1\n                          ? '<span class=\"ranking-badge ranking-silver\"><i class=\"fas fa-medal\"></i></span>'\n                          : i === 2\n                            ? '<span class=\"ranking-badge ranking-bronze\"><i class=\"fas fa-medal\"></i></span>'\n                            : ''\n                    }\n                    <span class=\"loyal-customer-name\" title=\"${c.name || c.email || '-'}\">${c.name || c.email || '-'}</span>\n                  </td>\n                  <td style=\"text-align:center;\">${c.count}</td>\n                  <td style=\"text-align:center;\"><span class=\"loyal-customer-date\" title=\"${c.lastDate ? new Date(c.lastDate).toLocaleDateString('pt-BR') : '-'}\">${c.lastDate ? new Date(c.lastDate).toLocaleDateString('pt-BR') : '-'}</span></td>\n                </tr>\n              `\n                )\n                .join('')}\n            </tbody>\n          </table>\n        `;\n      } else {\n        loyalCustomersIndicator.innerHTML = `\n          <div class='empty-state' style=\"text-align:center;\">\n            <i class='fas fa-users' style=\"font-size:2.2rem; color:var(--border-color);\"></i>\n            <p style=\"margin-top:0.5em; color:#64748b;\">\n              Ainda não há clientes recorrentes.<br>\n              Assim que houver, eles aparecerão aqui!\n            </p>\n          </div>\n        `;\n      }\n    }\n  }\n\n  async viewMessage(contactId) {\n    try {\n      const response = await fetch(`/api/contacts/${contactId}`, {\n        headers: this.addAuthHeaders(),\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        this.showMessageModal(data.contact);\n      } else {\n        this.showError('Erro ao carregar mensagem');\n      }\n    } catch (error) {\n      console.error('Erro ao carregar mensagem:', error);\n      this.showError('Erro ao carregar mensagem');\n    }\n  }\n\n  async viewReservationDetails(reservationId) {\n    try {\n      const response = await fetch(`/api/reservations/${reservationId}`, {\n        headers: this.addAuthHeaders(),\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        this.showReservationModal(data.reservation);\n      } else {\n        this.showError('Erro ao carregar reserva');\n      }\n    } catch (error) {\n      console.error('Erro ao carregar reserva:', error);\n      this.showError('Erro ao carregar reserva');\n    }\n  }\n\n  showMessageModal(contact) {\n    if (contact && contact.id) {\n      const modal = document.getElementById('messageModal');\n      const modalBody = modal.querySelector('.modal-body');\n\n      modal.querySelector('.modal-title').innerHTML =\n        `<i class=\"fas fa-envelope-open-text\" style=\"margin-right: 0.5em; color: #2563eb; font-size: 1.25em;\"></i> Mensagem de ${this.escapeHtml(safeValue(contact.name))}`;\n\n      // Modal de Contato\n      modalBody.innerHTML = `\n        <dl class=\"details-list\">\n          <div style=\"grid-column: 1;\">\n            <dt><i class=\"fas fa-user\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Nome</dt>\n            <dd>${this.escapeHtml(safeValue(contact.name))}</dd>\n          </div>\n          <div style=\"grid-column: 2;\">\n            <dt><i class=\"fas fa-envelope\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Email</dt>\n            <dd>${this.escapeHtml(safeValue(contact.email))}</dd>\n          </div>\n          <div style=\"grid-column: 1;\">\n            <dt><i class=\"fas fa-phone\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Telefone</dt>\n            <dd>${this.escapeHtml(safeValue(contact.phone))}</dd>\n          </div>\n          <div style=\"grid-column: 2;\">\n            <dt><i class=\"fas fa-calendar-alt\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Data</dt>\n            <dd>${contact.timestamp || contact.date ? new Date(contact.timestamp || contact.date).toLocaleString('pt-BR', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' }) : '-'}</dd>\n          </div>\n          <div class=\"message-row\">\n            <dt><i class=\"fas fa-comment\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Mensagem</dt>\n            <dd class=\"message-content\">${this.escapeHtml(safeValue(contact.message))}</dd>\n          </div>\n        </dl>\n      `;\n\n      this.showModal('messageModal');\n    }\n  }\n\n  showReservationModal(reservation) {\n    if (reservation && reservation.id) {\n      const modal = document.getElementById('reservationModal');\n      const modalBody = modal.querySelector('.modal-body');\n\n      modal.querySelector('.modal-title').innerHTML =\n        `<i class=\"fas fa-ship\" style=\"margin-right: 0.5em; color: #2563eb; font-size: 1.25em;\"></i> Reserva de ${this.escapeHtml(safeValue(reservation.name))}`;\n\n      // Modal de Reserva\n      const participantes = safeValue(\n        reservation.participants || reservation.guests\n      );\n      const participantesLabel = `${participantes} ${participantes == 1 ? 'pessoa' : 'pessoas'}`;\n      modalBody.innerHTML = `\n        <dl class=\"details-list reserva-row-3\">\n          <div>\n            <dt><i class=\"fas fa-map-marker-alt\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Destino</dt>\n            <dd>${this.escapeHtml(safeValue(reservation.destination))}</dd>\n          </div>\n          <div>\n            <dt><i class=\"fas fa-calendar-alt\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Data</dt>\n            <dd>${reservation.date ? new Date(reservation.date).toLocaleDateString('pt-BR') : '-'}</dd>\n          </div>\n          <div>\n            <dt><i class=\"fas fa-user-friends\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Participantes</dt>\n            <dd>${participantesLabel}</dd>\n          </div>\n        </dl>\n        <dl class=\"details-list reserva-row-2\" style=\"margin-top:0.5rem;\">\n          <div>\n            <dt><i class=\"fas fa-envelope\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Email</dt>\n            <dd>${this.escapeHtml(safeValue(reservation.email))}</dd>\n          </div>\n          <div>\n            <dt><i class=\"fas fa-info-circle\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Status</dt>\n            <dd><span class=\"status-badge status-${this.escapeHtml(safeValue(reservation.status))}\">${this.getStatusText(safeValue(reservation.status))}</span></dd>\n          </div>\n        </dl>\n        <dl class=\"details-list\" style=\"margin-top:0.5rem;\">\n          <div>\n            <dt><i class=\"fas fa-phone\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Telefone</dt>\n            <dd>${this.escapeHtml(safeValue(reservation.phone))}</dd>\n          </div>\n          <div>\n            <dt><i class=\"fas fa-clock\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Solicitado em</dt>\n            <dd>${reservation.timestamp ? new Date(reservation.timestamp).toLocaleString('pt-BR', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' }) : '-'}</dd>\n          </div>\n          ${\n            (reservation.message && reservation.message.trim()) ||\n            (reservation.mensagem && reservation.mensagem.trim())\n              ? `\n            <div class=\"message-row\">\n              <dt><i class=\"fas fa-comment-dots\" style=\"color: #2563eb; margin-right: 0.4em;\"></i>Mensagem</dt>\n              <dd class=\"message-content\">${this.escapeHtml(reservation.message || reservation.mensagem)}</dd>\n            </div>\n          `\n              : ''\n          }\n        </dl>\n      `;\n\n      this.showModal('reservationModal');\n    }\n  }\n\n  async deleteItem(id, type) {\n    const modal = document.getElementById('confirmationModal');\n    if (!modal) return;\n\n    const safeId = id.toString();\n\n    modal.dataset.id = safeId;\n    modal.dataset.type = type;\n\n    const modalTitle = modal.querySelector('.modal-title');\n    const modalBody = modal.querySelector('.confirmation-message');\n\n    if (!modalTitle || !modalBody) {\n      console.error('Estrutura do modal de confirmação está incorreta.');\n      return;\n    }\n\n    const itemText = type === 'reservation' ? 'a reserva' : 'o contato';\n\n    // Apanha o nome do item da linha da tabela correspondente\n    let itemName = '';\n    const row = document.querySelector(`tr[data-id=\"${safeId}\"]`);\n    if (row) {\n      itemName = row.querySelector('td:first-child')?.textContent;\n    }\n\n    modalTitle.textContent = 'Confirmar Exclusão';\n    modalBody.innerHTML = `Você tem certeza que deseja excluir ${itemText} de <strong>${this.escapeHtml(itemName || `ID ${safeId}`)}</strong>? <br><br>Esta ação não poderá ser desfeita.`;\n\n    this.showModal('confirmationModal');\n  }\n\n  showModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      modal.style.display = 'flex'; // Usar flex para centralizar\n      setTimeout(() => {\n        modal.classList.add('show');\n        const content = modal.querySelector('.modal-content');\n        if (content) content.classList.add('show');\n      }, 10);\n    }\n  }\n\n  closeModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      modal.classList.remove('show');\n      const content = modal.querySelector('.modal-content');\n      if (content) content.classList.remove('show');\n\n      setTimeout(() => {\n        modal.style.display = 'none';\n      }, 300); // Aguarda a transição de fade-out\n    }\n  }\n\n  async performDelete(id, type) {\n    this.closeModal('confirmationModal');\n\n    let result;\n    if (type === 'reservation') {\n      result = await this.deleteReservation(id);\n      this.closeModal('reservationModal');\n    } else if (type === 'contact') {\n      result = await this.deleteContact(id);\n    }\n\n    if (result && result.success) {\n      this.showSuccess('Item excluído com sucesso!');\n      if (type === 'reservation') {\n        setTimeout(async () => {\n          await this.loadReservations();\n          await this.loadDashboard();\n        }, 200);\n      } else if (type === 'contact') {\n        setTimeout(async () => {\n          await this.loadContacts();\n        }, 200);\n      }\n    } else {\n      this.showError(\n        result && result.message ? result.message : 'Erro ao excluir item'\n      );\n    }\n  }\n\n  async deleteReservation(id) {\n    if (!id) {\n      this.showError('ID da reserva inválido.');\n      return null;\n    }\n    try {\n      const response = await fetch(`/api/reservations/${id}`, {\n        method: 'DELETE',\n        headers: this.addAuthHeaders(),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || `Erro ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(`Erro ao deletar reserva ${id}:`, error);\n      this.showError(`Falha ao deletar reserva: ${error.message}`);\n      return null;\n    }\n  }\n\n  async deleteContact(id) {\n    if (!id) {\n      this.showError('ID do contato inválido.');\n      return null;\n    }\n    try {\n      const response = await fetch(`/api/contacts/${id}`, {\n        method: 'DELETE',\n        headers: this.addAuthHeaders(),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || `Erro ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(`Erro ao deletar contato ${id}:`, error);\n      this.showError(`Falha ao deletar contato: ${error.message}`);\n      return null;\n    }\n  }\n\n  showSuccess(message) {\n    window.showSuccessMessage('Sucesso', message);\n  }\n\n  showError(message) {\n    window.showErrorMessage('Erro', message);\n  }\n\n  escapeHtml(str) {\n    if (typeof str !== 'string') return '';\n    return str.replace(/[&<>\"']/g, match => {\n      return {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#39;',\n      }[match];\n    });\n  }\n\n  getStatusText(status) {\n    const statusMap = {\n      pendente: 'Pendente',\n      confirmada: 'Confirmada',\n      cancelada: 'Cancelada',\n    };\n    return statusMap[status] || status;\n  }\n}\n\n// Função utilitária para exibir valores sem mostrar 'undefined' ou 'null'\nfunction safeValue(val) {\n  return val === undefined || val === null ? '-' : val;\n}\n\n// Função utilitária para garantir que toda reserva tenha o campo 'guests' preenchido corretamente\nfunction normalizeGuests(reservation) {\n  if (\n    reservation.guests === undefined &&\n    reservation.participants !== undefined\n  ) {\n    reservation.guests = reservation.participants;\n  }\n  return reservation;\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const adminPanel = new AdminPanel();\n  adminPanel.initAuth();\n  window.adminPanel = adminPanel;\n});\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_typeof","toPrimitive","String","_toPrimitive","AdminPanel","_classCallCheck","this","authToken","localStorage","getItem","isAuthenticated","currentTab","token","charts","listenersAttached","currentFilters","headers","undefined","concat","_login","_callee","username","password","response","data","_t","_context","fetch","method","body","JSON","stringify","json","success","setItem","message","console","error","_x","_x2","_logout","_callee2","usernameInput","passwordInput","_t2","_this","_context2","addAuthHeaders","removeItem","document","getElementById","clearLoginMessages","showLoginScreen","setTimeout","setupLoginForm","window","location","reload","_verifyToken","_callee3","_t3","_context3","querySelector","style","display","_initAuth","_callee4","savedToken","_t4","_context4","verifyToken","showAdminPanel","init","_this2","loginForm","loginBtn","addEventListener","_ref","_callee5","result","_context5","preventDefault","trim","showLoginError","disabled","innerHTML","login","textContent","_x3","errorDiv","createElement","className","appendChild","querySelectorAll","forEach","el","remove","setupTabs","setupEventListeners","loadDashboard","_this3","navLinks","link","targetTab","getAttribute","showTab","classList","add","tabName","_this4","tab","loadReservations","loadContacts","loadStats","_this5","overlay","target","closest","activityItem","contactId","dataset","viewMessage","card","matches","viewReservationDetails","id","deleteItem","type","logout","modal","closeModal","_modal$dataset","performDelete","contains","newStatus","updateReservationStatus","_loadDashboard","_callee6","_t5","_context6","updateDashboardStats","stats","loadRecentActivity","_elements$pendingRese","elements","totalReservations","pendingReservations","totalContacts","monthlyRevenue","setTrendDashboard","elementSelector","thresholds","messages","parentElement","colorClass","msg","green","yellow","red","confirmedReservations","newReservationsLast30Days","newContactsLast30Days","effectivenessRate","pendingCard","pendingTrend","cor","pendentes","cursor","onclick","click","cancellationIndicator","reservationStatusCount","total","values","reduce","b","cancelled","cancelada","percent","toFixed","_loadRecentActivity","_callee7","reservationsResponse","reservationsData","contactsResponse","contactsData","_t6","_this6","_context7","cache","displayRecentReservations","reservations","slice","displayRecentContacts","contacts","_this7","container","map","normalizeGuests","reservation","guests","guestsLabel","escapeHtml","name","date","Date","toLocaleDateString","destination","status","getStatusText","join","_this8","contact","email","_loadReservations","_callee8","filters","url","params","_t7","_context8","_objectSpread","push","encodeURIComponent","showLoading","displayReservations","showError","_x4","elementId","element","_this9","reservationsList","tableHTML","createStatusDropdown","filterBtn","filterDropdown","filterForm","clearFiltersBtn","filterStatus","filterDestination","stopPropagation","handler","removeEventListener","adminPanel","currentStatus","normalizedCurrentStatus","toLowerCase","options","entries","pendente","confirmada","_ref2","_ref3","_slicedToArray","text","selected","buttonsHtml","_updateReservationStatus","_callee0","_t8","_this0","_context0","ok","showSuccess","_callee9","_context9","_x5","_x6","_loadContacts","_callee1","contactsList","_t9","_context1","Error","statusText","displayContacts","_this1","phone","createdAt","timestamp","_loadStats","_callee10","_t0","_context10","log","displayStats","_this10","conversionRate","setTrend","destinationCtx","destinationDistribution","destroy","Chart","labels","keys","datasets","label","backgroundColor","borderRadius","maxBarThickness","responsive","maintainAspectRatio","plugins","legend","tooltip","enabled","scales","x","grid","ticks","color","font","size","beginAtZero","destinationList","destinations","sort","_ref5","_ref6","_ref9","_ref0","count","monthlyChart","monthlyDistribution","monthlyLine","getContext","borderColor","fill","tension","pointRadius","pointBackgroundColor","pointBorderColor","pointHoverRadius","monthlyList","monthNames","monthlyData","index","filter","item","_ref1","monthlyPie","position","destinationPie","pieColors","_","seasonalityIndicator","monthNamesFull","max","maxIndex","idx","trendHtml","prev","diff","isRecorde","allYearsMonthlyDistribution","record","year","val","topDestinationsIndicator","_ref10","_ref11","dest","loyalCustomersIndicator","loyalCustomers","customers","lastDate","_viewMessage","_callee11","_t1","_context11","showMessageModal","_x7","_viewReservationDetails","_callee12","reservationId","_t10","_context12","showReservationModal","_x8","modalBody","safeValue","toLocaleString","day","month","hour","minute","showModal","participantes","participants","participantesLabel","mensagem","_deleteItem","_callee13","safeId","modalTitle","itemText","itemName","row","_row$querySelector","_context13","toString","_x9","_x0","modalId","content","_performDelete","_callee16","_this11","_context16","deleteReservation","deleteContact","_callee14","_context14","_callee15","_context15","_x1","_x10","_deleteReservation","_callee17","errorData","_t11","_context17","_x11","_deleteContact","_callee18","_t12","_context18","_x12","showSuccessMessage","showErrorMessage","str","replace","match","initAuth"],"sourceRoot":""}